// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package server

import (
	"context"

	"go-zero-mall/service/product/rpc/internal/logic"
	"go-zero-mall/service/product/rpc/internal/svc"
	"go-zero-mall/service/product/rpc/pb/product"
)

type ProductServiceServer struct {
	svcCtx *svc.ServiceContext
	product.UnimplementedProductServiceServer
}

func NewProductServiceServer(svcCtx *svc.ServiceContext) *ProductServiceServer {
	return &ProductServiceServer{
		svcCtx: svcCtx,
	}
}

// -----------------------product-----------------------
func (s *ProductServiceServer) AddProduct(ctx context.Context, in *product.AddProductReq) (*product.AddProductResp, error) {
	l := logic.NewAddProductLogic(ctx, s.svcCtx)
	return l.AddProduct(in)
}

func (s *ProductServiceServer) UpdateProduct(ctx context.Context, in *product.UpdateProductReq) (*product.UpdateProductResp, error) {
	l := logic.NewUpdateProductLogic(ctx, s.svcCtx)
	return l.UpdateProduct(in)
}

func (s *ProductServiceServer) DelProduct(ctx context.Context, in *product.DelProductReq) (*product.DelProductResp, error) {
	l := logic.NewDelProductLogic(ctx, s.svcCtx)
	return l.DelProduct(in)
}

func (s *ProductServiceServer) GetProductById(ctx context.Context, in *product.GetProductByIdReq) (*product.GetProductByIdResp, error) {
	l := logic.NewGetProductByIdLogic(ctx, s.svcCtx)
	return l.GetProductById(in)
}

func (s *ProductServiceServer) SearchProduct(ctx context.Context, in *product.SearchProductReq) (*product.SearchProductResp, error) {
	l := logic.NewSearchProductLogic(ctx, s.svcCtx)
	return l.SearchProduct(in)
}

func (s *ProductServiceServer) DecrStock(ctx context.Context, in *product.DecrStockReq) (*product.DecrStockResp, error) {
	l := logic.NewDecrStockLogic(ctx, s.svcCtx)
	return l.DecrStock(in)
}

func (s *ProductServiceServer) DecrStockRevert(ctx context.Context, in *product.DecrStockReq) (*product.DecrStockResp, error) {
	l := logic.NewDecrStockRevertLogic(ctx, s.svcCtx)
	return l.DecrStockRevert(in)
}
