// Code generated by goctl. DO NOT EDIT.
// Source: product.proto

package productservice

import (
	"context"

	"go-zero-mall/service/product/rpc/pb/product"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddProductReq      = product.AddProductReq
	AddProductResp     = product.AddProductResp
	DelProductReq      = product.DelProductReq
	DelProductResp     = product.DelProductResp
	GetProductByIdReq  = product.GetProductByIdReq
	GetProductByIdResp = product.GetProductByIdResp
	Product            = product.Product
	SearchProductReq   = product.SearchProductReq
	SearchProductResp  = product.SearchProductResp
	UpdateProductReq   = product.UpdateProductReq
	UpdateProductResp  = product.UpdateProductResp

	ProductService interface {
		// -----------------------product-----------------------
		AddProduct(ctx context.Context, in *AddProductReq, opts ...grpc.CallOption) (*AddProductResp, error)
		UpdateProduct(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateProductResp, error)
		DelProduct(ctx context.Context, in *DelProductReq, opts ...grpc.CallOption) (*DelProductResp, error)
		GetProductById(ctx context.Context, in *GetProductByIdReq, opts ...grpc.CallOption) (*GetProductByIdResp, error)
		SearchProduct(ctx context.Context, in *SearchProductReq, opts ...grpc.CallOption) (*SearchProductResp, error)
	}

	defaultProductService struct {
		cli zrpc.Client
	}
)

func NewProductService(cli zrpc.Client) ProductService {
	return &defaultProductService{
		cli: cli,
	}
}

// -----------------------product-----------------------
func (m *defaultProductService) AddProduct(ctx context.Context, in *AddProductReq, opts ...grpc.CallOption) (*AddProductResp, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.AddProduct(ctx, in, opts...)
}

func (m *defaultProductService) UpdateProduct(ctx context.Context, in *UpdateProductReq, opts ...grpc.CallOption) (*UpdateProductResp, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.UpdateProduct(ctx, in, opts...)
}

func (m *defaultProductService) DelProduct(ctx context.Context, in *DelProductReq, opts ...grpc.CallOption) (*DelProductResp, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.DelProduct(ctx, in, opts...)
}

func (m *defaultProductService) GetProductById(ctx context.Context, in *GetProductByIdReq, opts ...grpc.CallOption) (*GetProductByIdResp, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.GetProductById(ctx, in, opts...)
}

func (m *defaultProductService) SearchProduct(ctx context.Context, in *SearchProductReq, opts ...grpc.CallOption) (*SearchProductResp, error) {
	client := product.NewProductServiceClient(m.cli.Conn())
	return client.SearchProduct(ctx, in, opts...)
}
