// Code generated by goctl. DO NOT EDIT.
// Source: pay.proto

package payservice

import (
	"context"

	"go-zero-mall/service/pay/rpc/pb/pay"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddPayReq    = pay.AddPayReq
	AddPayResp   = pay.AddPayResp
	CallbackReq  = pay.CallbackReq
	CallbackResp = pay.CallbackResp
	DetailReq    = pay.DetailReq
	DetailResp   = pay.DetailResp
	Pay          = pay.Pay

	PayService interface {
		// -----------------------pay-----------------------
		AddPay(ctx context.Context, in *AddPayReq, opts ...grpc.CallOption) (*AddPayResp, error)
		GetPayById(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*DetailResp, error)
		Callback(ctx context.Context, in *CallbackReq, opts ...grpc.CallOption) (*CallbackResp, error)
	}

	defaultPayService struct {
		cli zrpc.Client
	}
)

func NewPayService(cli zrpc.Client) PayService {
	return &defaultPayService{
		cli: cli,
	}
}

// -----------------------pay-----------------------
func (m *defaultPayService) AddPay(ctx context.Context, in *AddPayReq, opts ...grpc.CallOption) (*AddPayResp, error) {
	client := pay.NewPayServiceClient(m.cli.Conn())
	return client.AddPay(ctx, in, opts...)
}

func (m *defaultPayService) GetPayById(ctx context.Context, in *DetailReq, opts ...grpc.CallOption) (*DetailResp, error) {
	client := pay.NewPayServiceClient(m.cli.Conn())
	return client.GetPayById(ctx, in, opts...)
}

func (m *defaultPayService) Callback(ctx context.Context, in *CallbackReq, opts ...grpc.CallOption) (*CallbackResp, error) {
	client := pay.NewPayServiceClient(m.cli.Conn())
	return client.Callback(ctx, in, opts...)
}
